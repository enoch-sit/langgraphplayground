version: '3.8'

services:
  # PostgreSQL database for persistent checkpoint storage
  postgres:
    image: postgres:16-alpine
    container_name: langgraph-postgres
    environment:
      POSTGRES_DB: langgraph
      POSTGRES_USER: langgraph
      POSTGRES_PASSWORD: langgraph_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langgraph"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - langgraph-net
    restart: unless-stopped

  langgraph-playground:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: langgraph-playground
    ports:
      # Production: Bind to localhost only (nginx will proxy)
      # Development: Use "2024:2024" for direct access
      - "127.0.0.1:2024:2024"
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - ROOT_PATH=/langgraphplayground  # Change to "/" for root path deployment
      # PostgreSQL connection
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=langgraph
      - POSTGRES_USER=langgraph
      - POSTGRES_PASSWORD=langgraph_password_change_in_production
    volumes:
      # Development: Mount source for hot reload
      # Production: Comment out src mount, keep data only
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2024/langgraphplayground/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits (production)
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 512M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    networks:
      - langgraph-net

networks:
  langgraph-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
